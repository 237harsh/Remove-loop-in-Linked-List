class Solution
{
    public:
    //Function to remove a loop in the linked list.
    void removeLoop(Node* head)
    {
        if(head->next==NULL)
        return ;
        int f=0;
        Node *slow=head,*fast=head;
        while(fast!=NULL&&fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)
            {
                f=1;
                break;
            }
        }
        if(f==1)///if loop exists
        {
          Node *p1=head;
          Node *p2=fast;
          //start a p1 pinter from head
          //start a p2 pointer where slow==fast
          //when p1==p1 it means we reach at loop point
          //now we take a prev pointer and a next pionter
          //when next becomes equal to starting point set prev =NULL;
          while(p1!=p2)
          {
              p1=p1->next;
              p2=p2->next;
          }
          Node *temp=p1->next;
          Node *prev=p1;
          while(temp!=p1)
          {
              temp=temp->next;
              prev=prev->next;
          }
          prev->next=NULL;
          
        }
       
    }
};


https://practice.geeksforgeeks.org/problems/remove-loop-in-linked-list/1#   
